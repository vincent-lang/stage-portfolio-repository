@use '../../config/size';
@use '../../config/side';
@use '../../config/color';

@use '../function/list';

@mixin set($width: false, $side: false, $style: false, $color: false, $radius: false) {

  // Default property.
  $prop: 'border';

  // Default size.
  @if not $width { $width: #{size.border('width', 'thin')}px }
  // If multiple custom widths are entered.
  @else if is-list($width) { $width: list.implode($width, ' ') }
  // If integer is used.
  @else if is-int($width) { $width: #{$width}px }
  // If border width name is used.
  @else { $width: size.get('border', $width) }

  // Top and bottom border.
  @if $side == 'y' { $width: $width 0 $width 0 }
  // Right and left border.
  @else if $side == 'x' { $width: 0 $width 0 $width }
  // If side is filled.
  @else if $side and str-length($side) > 0 {

    // Side prefix is used.
    @if str-length($side) == 1 { $prop: $prop+'-'+side.get($side); }
    // Side can be used for property.
    @else { $prop: $prop+'-'+$side; }

  }

  // Default style.
  @if not $style { $style: 'solid'; }

  @if not $color { $color: color.theme('light', 'border'); }

  // Border properties are set.
  @if $width { #{$prop}-width: #{$width}; }
  @if $style { #{$prop}-style: #{$style}; }
  @if $color { #{$prop}-color: #{$color}; }

  // Border radius property is set.
  @if $radius {
    @if type-of($radius) == 'number' {
      border-radius: $radius;
    } @else if type-of($radius) == 'string' {
      border-radius: size.border('radius', $radius);
    } @else if type-of($radius) == 'list' {
      border-radius: list.implode($radius, ' ');
    }
  }
}
